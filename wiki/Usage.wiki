#labels Phase-Implementation
=formatCurrency(destination _optional_, options)=

==Overview==
The formatCurrency function modifies the values or contents of a jQuery object set into a currency amount.

|| *destination* || string || optional ||
An optional property in the [http://docs.jquery.com/Selectors jQuery selector] format that will recieve the formatted version of the object set.  If no destination is provided the original contents will be replaced with the formatted version.

==Options==
|| *symbol* || string || default: '$' ||
The currency symbol to be used in the %s value of the postive or negative formats.

|| *positiveFormat* || string || default: '%s%n' ||
The format notation for setting destination value.  The *%s* variable signifies the symbol, and the *%n* variable signifies the number. An example of the default settings if the number 1000 were passed using '%s%n' would resulting in $1,000.00.

|| *negativeFormat* || string || default: '(%s%n)' ||
The format notation for setting destination value. The *%s* variable signifies the symbol, and the *%n* variable signifies the number. An example of the default settings if the number 1000 were passed using '%s%n' would resulting in ($1,000.00).

|| *decimalSymbol* || string || default: '.' ||
The symbol to be used to seperate the dollars from the cents.

|| *digitGroupSymbol* || string || default: ',' ||
The symbol to be used to seperate the thousands place when grouping the numbers.

|| *groupDigits* || boolean || default: true ||
A boolean flag for grouping the digits into the thousands.  If true the value of 1000 would result in $1,000.00.  When false the value of 1000 would result in $1000.00.

|| *colorize* || boolean || default: false ||
A boolean flag for colorizing the element after formatting the currency.  If true the destination will be set to black when the value is positive and red when the value is negative.  If false the color css value will not be modified.

|| *region* || string || default: '' ||
One of the many cultures listed on the InternationalSupport page.  In order to use these values you will have to include the corresponding i18n file to your page.  You can also include the jQuery.formatCurrency.all.js file to include all supported regions.  If a culture cannot be found the region will be attempted, if the region cannot be found the default value will be used. (eg.  If the region supplied is 'es-MX' and 'es-MX' is not found 'es' will be used.  If 'es is not found then '' will be used).

==Examples==
For a working demo see http://bendewey.com/code/formatCurrency/demo.  Here are some common examples

{{
$('.label').formatCurrency();
}}
Formats the values of any DOM elements with a class of 'label' as currency.

{{
$('.source').formatCurrency('.destination');
}}
Converts the value of a DOM element with a class of 'source' as currency to the element with a class of destination.  If multiple items result from the source or destination objects all the destinations will be set to the last source value.

{{
$('.label').formatCurrency({ colorize:true });
}}
Automatically sets the color css property depending on whether the value is positive or negative.

{{
$('.label').formatCurrency({ colorize:true, region: 'de-DE' });
// or
$('.label').formatCurrency($.extend({ colorize: true }, $.formatCurrency.region['de-DE']));
}}
The resulting value of the .label elements will be formatted using the 'German (Germany)' currency format, and the results will change color based whether the output is positive or negative.
